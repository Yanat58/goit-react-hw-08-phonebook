{"version":3,"file":"static/js/342.6a90192d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Message/Message.module.css?e83e","components/Message/Message.jsx","pages/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"ContactForm_formBox__cXiHe\",\"label\":\"ContactForm_label__-cVXI\",\"labelText\":\"ContactForm_labelText__JB4h1\",\"input\":\"ContactForm_input__Bl93P\",\"btnAdd\":\"ContactForm_btnAdd__F4QeR\",\"btnAddIcon\":\"ContactForm_btnAddIcon__U4ixR\",\"btnAddText\":\"ContactForm_btnAddText__hPgKa\",\"form__title\":\"ContactForm_form__title__9z+Dq\"};","export const selectFilterValue = state => state.filter.filter;\nexport const selectContactValue = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import React from 'react';\nimport Notiflix from 'notiflix';\nimport { BiUserPlus } from 'react-icons/bi';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContactValue } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = React.useState('');\n  const [number, setNumber] = React.useState('');\n\n  const contacts = useSelector(selectContactValue);\n  const dispatch = useDispatch();\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const nameIsExist = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    const numberIsExist = contacts.some(\n      contact => contact.number.trim() === number.trim()\n    );\n\n    if (name.trim() === '' || number.trim() === '') {\n      Notiflix.Notify.warning(`Fields must be filled`);\n    } else if (nameIsExist) {\n      Notiflix.Report.warning(`This ${name} is already in contacts`);\n    } else if (numberIsExist) {\n      Notiflix.Report.warning(`This ${number} is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n\n      Notiflix.Notify.success(`Add contact`);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={css.formBox} onSubmit={handlerSubmit}>\n        <h1 className={css.form__title}>Add new contact</h1>\n        <label className={css.label} htmlFor=\"idName\">\n          <p className={css.labelText}>Name</p>\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name\"\n            id=\"idName\"\n            onChange={e => setName(e.currentTarget.value)}\n          />\n        </label>\n        <label className={css.label} htmlFor=\"idNumber\">\n          <p className={css.labelText}>Phone</p>\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter number number\"\n            id=\"idNumber\"\n            onChange={e => setNumber(e.currentTarget.value)}\n          />\n        </label>\n\n        <button className={css.btnAdd} type=\"submit\">\n          <BiUserPlus className={css.btnAddIcon} size={25} />\n          <span className={css.btnAddText}>Add contact</span>\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactName\":\"ContactItem_contactName__ZAMAK\",\"contactNumber\":\"ContactItem_contactNumber__Xjnxb\",\"contactImg\":\"ContactItem_contactImg__qJ4tp\",\"deletBtn\":\"ContactItem_deletBtn__2rF5N\",\"btnDeleteIcon\":\"ContactItem_btnDeleteIcon__UV4zh\"};","import React from 'react';\nimport Notiflix from 'notiflix';\nimport { BiUserMinus } from 'react-icons/bi';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport person from 'image/person.png';\n\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <img\n        style={{ marginRight: '5px' }}\n        src={person}\n        alt=\"person\"\n        width={45}\n        height={45}\n      />\n      <p className={css.contactName}>{contact.name}</p>\n      <p className={css.contactNumber}>{contact.number}</p>\n      <button\n        className={css.deletBtn}\n        type=\"button\"\n        onClick={() => {\n          dispatch(deleteContact(contact.id))\n            .unwrap()\n            .then(() => Notiflix.Notify.success(`Delete contact`));\n        }}\n      >\n        <span>\n          <BiUserMinus className={css.btnDeleteIcon} size={20} />\n        </span>\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport css from './ContactList.module.css';\nimport {  useSelector } from 'react-redux';\nimport {\n  selectContactValue,\n  selectFilterValue,\n} from 'redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactValue);\n  const filter = useSelector(selectFilterValue);\n  \n\n  const filterContactHandler = () => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    if (!filter) {\n      return contacts;\n    }\n    return contacts\n      .filter(contact =>\n        contact.name.toLocaleLowerCase().includes(normalizedFilter)\n      )\n      .sort((firstItem, secondItem) =>\n        firstItem.name.localeCompare(secondItem.name)\n      );\n  };\n  const filterContact = filterContactHandler();\n\n  return (\n    <>\n      <ul className={css.contactList}>\n        {filterContact?.map(contact => (\n          <li className={css.contactItem} key={contact.id}>\n            <ContactItem contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterText\":\"Filter_filterText__QGy-k\",\"titleSection\":\"Filter_titleSection__zPLkY\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const changeFilterHandler = e =>\n    dispatch(changeFilter(e.currentTarget.value.toLowerCase().trim()));\n\n  return (\n    <>\n      <label className={css.filterLabel}>\n        <p className={css.filterText}>Find contacts by name</p>\n\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          value={filter}\n          placeholder=\"search\"\n          onChange={changeFilterHandler}\n        />\n      </label>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message__text\":\"Message_message__text__oIT7T\",\"titleSection\":\"Message_titleSection__G+WTW\"};","import React from 'react';\nimport css from './Message.module.css';\n\nexport const Message = () => {\n  return (\n    <>\n      <h2 className={css.titleSection}>Contact list</h2>\n      <p className={css.message__text}>There are no any contacts ... </p>\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Message } from 'components/Message/Message';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContactValue } from 'redux/contacts/selectors';\nimport phone1 from 'image/phone1.png';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(selectContactValue);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n      <div>\n        <ContactForm />\n\n        <Filter />\n        {contacts.length === 0 ? <Message /> : <ContactList />}\n      </div>\n\n      <img\n        style={{\n          backgroundSize: 'cover',\n        }}\n        src={phone1}\n        alt=\"phone\"\n        width={500}\n      />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilterValue","state","filter","selectContactValue","contacts","ContactForm","React","name","setName","number","setNumber","useSelector","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","contact","nameIsExist","some","toLowerCase","trim","numberIsExist","Notiflix","addContact","htmlFor","type","value","pattern","title","required","placeholder","id","onChange","currentTarget","size","ContactItem","style","marginRight","src","person","alt","width","height","onClick","deleteContact","unwrap","then","ContactList","filterContact","normalizedFilter","toLocaleLowerCase","includes","sort","firstItem","secondItem","localeCompare","filterContactHandler","map","Filter","changeFilter","Message","useEffect","fetchContacts","display","justifyContent","length","backgroundSize","phone1"],"sourceRoot":""}